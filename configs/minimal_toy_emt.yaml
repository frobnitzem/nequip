run: [train, test]

chemical_symbols: [Cu]
model_type_names: ${chemical_symbols}
cutoff_radius: 4.0

data_seed: 456
data:
  _target_: nequip.data.datamodule.NequIPDataModule
  seed: ${data_seed}
  split_dataset:
    dataset:
      _target_: nequip.data.dataset.EMTTestDataset
      transforms:
        - _target_: nequip.data.transforms.NeighborListTransform
          r_max: ${cutoff_radius}
        - _target_: nequip.data.transforms.ChemicalSpeciesToAtomTypeMapper
          chemical_symbols: ${chemical_symbols}
      supercell: [4, 4, 4]
      seed: ${data_seed}
      num_frames: 50
    train: 30
    val: 10
    test: 10
  train_dataloader_kwargs:
    batch_size: 2
  val_dataloader_kwargs:
    batch_size: 5
  test_dataloader_kwargs: ${data.train_dataloader_kwargs}
  stats_manager:
    _target_: nequip.data.DataStatisticsManager
    metrics:
      - field:
          _target_: nequip.data.NumNeighbors
        metric: 
          _target_: nequip.data.Mean
        name: num_neighbors_mean
      - field:
          _target_: nequip.data.PerAtomModifier
          field: total_energy
        metric:
          _target_: nequip.data.Mean
        name: per_atom_energy_mean
      - field: forces
        metric:
          _target_: nequip.data.RootMeanSquare
        name: forces_rms

trainer:
  _target_: lightning.Trainer
  max_epochs: 5
  check_val_every_n_epoch: 1
  log_every_n_steps: 3
  callbacks:
    - _target_: lightning.pytorch.callbacks.ModelCheckpoint
      dirpath: ${hydra:runtime.output_dir}
      save_last: true
    - _target_: nequip.train.callbacks.TestTimeXYZFileWriter
      out_file: ${hydra:runtime.output_dir}/test
      output_fields_from_original_dataset: [total_energy, forces, stress]
      chemical_symbols: ${chemical_symbols}

training_module:
  _target_: nequip.train.NequIPLightningModule
  loss:
    _target_: nequip.train.MetricsManager
    metrics:
      - name: peratomE_MSE
        field: total_energy
        mode: per_atom
        coeff: 1
        metric:
          _target_: nequip.train.MeanSquaredError
      - name: force_MSE
        field: forces
        coeff: 1
        metric:
          _target_: nequip.train.MeanSquaredError
      - name: stress_MSE
        field: stress
        coeff: 1
        metric:
          _target_: nequip.train.MeanSquaredError
  val_metrics:
    _target_: nequip.train.MetricsManager
    metrics:
      - name: E_MAE
        field: total_energy
        coeff: 1
        metric:
          _target_: nequip.train.MeanAbsoluteError
      - name: force_MAE
        field: forces
        coeff: 1
        metric:
          _target_: nequip.train.MeanAbsoluteError
      - name: stress_MAE
        field: stress
        coeff: 1
        metric:
          _target_: nequip.train.MeanAbsoluteError
  train_metrics: ${training_module.val_metrics}
  test_metrics: ${training_module.val_metrics}
  optimizer:
    _target_: torch.optim.Adam

  model:
    model_builders:
      - SimpleIrrepsConfig
      - NequIPGNNEnergyModel
      - StressForceOutput
      - RescaleEnergyEtc
    num_basis: 8
    r_max: ${cutoff_radius}
    l_max: 1
    parity: true
    num_features: 16
    num_layers: 4  

    seed: 123
    type_names: ${model_type_names}
    model_dtype: float32

    per_type_energy_scale_shift_shifts: ${training_data_stats:per_atom_energy_mean}
    global_rescale_scale: ${training_data_stats:forces_rms}
    avg_num_neighbors: ${training_data_stats:num_neighbors_mean}

global_options:
  seed: 789
